package G_APPL;

import java.awt.*;
import java.awt.event.*;
import borland.jbcl.layout.*;
import borland.jbcl.control.*;
import borland.jbcl.dataset.*;
import borland.sql.dataset.*;
import borland.jbcl.util.*;

class TExtProcs
 {
   public TExtProcs()
    {
      m_prDel = null;
      m_prUpd = null;
      m_prIns = null;
      m_q = null;
      m_sResync = null;
    }
   public ParameterRow m_prDel, m_prUpd, m_prIns;
   public String m_sDel, m_sUpd, m_sIns;
   public String m_sResync;

   public QueryDataSet m_q;
 }

public class DMod_Main implements DataModule{
  public Database m_dbMain = new Database();
  public QueryDataSet m_qRoom = new QueryDataSet();
  Column clmROOM_ID = new Column();
  Column clmROOM_Name = new Column();
  Column clmROOM_Rate = new Column();
  QueryResolver qresRoom = new QueryResolver();
  public Database m_dbLook = new Database();
  public QueryDataSet q_LookGuestCat = new QueryDataSet();
  public QueryDataSet m_qGuest = new QueryDataSet();
  QueryResolver qresGuest = new QueryResolver();
  Column clmID_GUEST = new Column();
  Column clmID_CAT = new Column();
  Column clmFNAME = new Column();
  Column clmLNAME = new Column();
  Column clmCITY = new Column();
  Column clmSTATE = new Column();
  Column clmADDRESS = new Column();
  Column clmPOST = new Column();
  Column clmDEPOSIT = new Column();
  Column clm__NAMECAT = new Column();
  public QueryDataSet m_qGuestCat = new QueryDataSet();
  public QueryDataSet m_qBillCat = new QueryDataSet();
  QueryResolver qresGuestCat = new QueryResolver();
  QueryResolver qresBillCat = new QueryResolver();
  Column column1 = new Column();
  Column column2 = new Column();
  Column column3 = new Column();
  Column column4 = new Column();
  public QueryDataSet m_qBill = new QueryDataSet();
  ParameterRow parBill = new ParameterRow();
  QueryResolver qresBill = new QueryResolver();
  Column clmPR_ID_GUEST_P = new Column();
  Column column5 = new Column();
  Column column6 = new Column();
  Column column7 = new Column();
  Column column8 = new Column();
  Column column9 = new Column();
  Column column10 = new Column();
  Column column11 = new Column();
  Column column12 = new Column();
  Column column13 = new Column();
  Column column14 = new Column();
  Column column15 = new Column();
  Column column16 = new Column();
  Column column17 = new Column();
  Column column19 = new Column();
  Column column20 = new Column();
  Column column21 = new Column();
  Column column22 = new Column();
  Column column23 = new Column();
  Column column24 = new Column();
  Column column25 = new Column();
  Column column26 = new Column();
  Column column27 = new Column();
  Column column28 = new Column();
  Column column29 = new Column();
  Column column30 = new Column();
  Column column31 = new Column();
  Column column33 = new Column();
  Column column18 = new Column();
  Column column32 = new Column();

  public DMod_Main() {
    m_tpProcs[ 0 ].m_prDel = prDelGuest;
    m_tpProcs[ 0 ].m_sDel = "execute Guest_delcascade :id_guest";
    m_tpProcs[ 0 ].m_q = m_qGuest;

    m_tpProcs[ 1 ].m_prDel = prDelBill;
    m_tpProcs[ 1 ].m_sDel = "execute GuestBill_delcascade :bill_no";
    m_tpProcs[ 1 ].m_q = m_qBill;
    m_tpProcs[ 1 ].m_sResync = "select BILL_NO, g.ID_EMP, ID_GUEST, FOLIO, DATE_, HEARD_OF_GI, DETAILS, " +
    "COMMENTS, _TOTAL_ADDITIONAL, _TOTAL_PAYMENTS, _TOTAL_ROOMSPAY, _SUBTOTAL, " +
    "_TAX_AND_SERVICE, _TOTAL, _PAY_ENROLMENT, _DEPOSIT_RECIEVED, _BALANCE_DUE, _TOTAL_GUEST, " +
    "_TOTAL_NIGHTS,  FULL_NAME   from GuestBill g INNER " +
    "JOIN Emplyee e  ON (g.ID_EMP=e.ID_EMP or g.ID_EMP is null) " +
    "              where g.BILL_NO = :my_pk_id";

    try {
      jbInit();
    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }

  protected void finalize() throws Throwable {
     m_tpProcs = null;
     super.finalize();
  }

  public static DMod_Main getDataModule() {
    return new DMod_Main();
  }

  public TExtProcs FindActionProc( QueryDataSet q )
   {
      for( int i = m_tpProcs.length - 1; i >= 0; --i )
        if( m_tpProcs[ i ].m_q == q ) return m_tpProcs[ i ];

      return null;
   }

  private void jbInit() throws Exception {
    m_dbMain.setConnection(new borland.sql.dataset.ConnectionDescriptor("jdbc:odbc:guana", "sa", "", false, "sun.jdbc.odbc.JdbcOdbcDriver"));
    m_dbMain.setTransactionIsolation(java.sql.Connection.TRANSACTION_SERIALIZABLE);
    m_dbMain.setUseTransactions(true);
    m_qRoom.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qRoom.setResolver(qresRoom);
    m_qRoom.setTableName("Room");
    m_qRoom.setStoreName("");
    m_qRoom.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select * from Room ORDER BY NAME", null, false, Load.ALL));

    clmROOM_ID.setBackground(new Color(240, 251, 255));
    clmROOM_ID.setColumnName("ID_ROOM");
    clmROOM_ID.setDataType(borland.jbcl.util.Variant.INT);
    clmROOM_ID.setForeground(new Color(64, 128, 128));
    clmROOM_ID.setReadOnly(true);
    clmROOM_ID.setEditable(false);
    clmROOM_ID.setRowId(true);
    clmROOM_ID.setTableName("ROOM");
    clmROOM_ID.setResolvable(false);
    clmROOM_ID.setVisible(borland.jbcl.util.TriState.NO);
    clmROOM_Name.setBackground(new Color(240, 251, 255));
    clmROOM_Name.setCaption("Rooms name");
    clmROOM_Name.setColumnName("NAME");
    clmROOM_Name.setDataType(borland.jbcl.util.Variant.STRING);
    clmROOM_Name.setFont(new Font("Helvetica", 1, 12));
    clmROOM_Name.setForeground(new Color(64, 128, 128));
    clmROOM_Name.setRequired(true);
    clmROOM_Name.setTableName("ROOM");
    clmROOM_Name.setWidth(20);
    clmROOM_Name.setVisible(borland.jbcl.util.TriState.YES);
    clmROOM_Rate.setCurrency(true);
    clmROOM_Rate.setDisplayMask("#,##0.00;(#,##0.00)");
    clmROOM_Rate.setBackground(new Color(192, 220, 192));
    clmROOM_Rate.setCaption("Rate ($)");
    clmROOM_Rate.setColumnName("RATE");
    clmROOM_Rate.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);

    clmROOM_Rate.setFont(new Font("Helvetica", 1, 12));
    clmROOM_Rate.setForeground(new Color(64, 128, 128));
    clmROOM_Rate.setRequired(true);
    clmROOM_Rate.setTableName("ROOM");
    clmROOM_Rate.setVisible(borland.jbcl.util.TriState.YES);

    qresRoom.setDatabase(m_dbMain);
    m_dbLook.setTransactionIsolation(java.sql.Connection.TRANSACTION_READ_COMMITTED);
    m_dbLook.setConnection(new borland.sql.dataset.ConnectionDescriptor("jdbc:odbc:guana", "sa", "", false, "sun.jdbc.odbc.JdbcOdbcDriver"));
    q_LookGuestCat.setMetaDataUpdate(MetaDataUpdate.NONE);
    q_LookGuestCat.setReadOnly(true);
    q_LookGuestCat.setResolvable(false);
    q_LookGuestCat.setTableName("CategoryGuest");
    q_LookGuestCat.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbLook, "select * from CategoryGuest", null, false, Load.ALL));

    m_qGuestCat.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qGuestCat.setResolver(qresGuestCat);
    m_qGuestCat.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select * from CategoryGuest ORDER BY NAMECAT", null, false, Load.ALL));
    m_qBillCat.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qBillCat.setResolver(qresBillCat);
    m_qBillCat.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select * from BillCategory ORDER BY NAME", null, false, Load.ALL));
    column1.setColumnName("ID_CAT");
    column1.setDataType(borland.jbcl.util.Variant.INT);
    column1.setEditable(false);
    column1.setReadOnly(true);
    column1.setRowId(true);
    column1.setResolvable(false);
    column1.setVisible(borland.jbcl.util.TriState.NO);
    column2.setBackground(new Color(240, 251, 255));
    column2.setCaption("Name");
    column2.setColumnName("NAMECAT");
    column2.setDataType(borland.jbcl.util.Variant.STRING);
    column2.setForeground(new Color(64, 128, 128));
    column2.setRequired(true);
    column2.setFont(new Font("Helvetica", 1, 12));
    column2.setWidth(25);
    column3.setColumnName("ID_BILL");
    column3.setDataType(borland.jbcl.util.Variant.INT);
    column3.setEditable(false);
    column3.setReadOnly(true);
    column3.setRowId(true);
    column3.setResolvable(false);
    column3.setVisible(borland.jbcl.util.TriState.NO);
    column4.setBackground(new Color(240, 251, 255));
    column4.setColumnName("NAME");
    column4.setDataType(borland.jbcl.util.Variant.STRING);
    column4.setFont(new Font("Helvetica", 1, 12));
    column4.setForeground(new Color(64, 128, 128));
    column4.setRequired(true);
    column4.setWidth(30);
    m_qBill.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qBill.setResolver(qresBill);
    m_qBill.setTableName("GuestBill");
    m_qBill.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select BILL_NO, g.ID_EMP, ID_GUEST, FOLIO, DATE_, HEARD_OF_GI, DETAILS, " +
    "COMMENTS, _TOTAL_ADDITIONAL, _TOTAL_PAYMENTS, _TOTAL_ROOMSPAY, _SUBTOTAL, " +
    "_TAX_AND_SERVICE, _TOTAL, _PAY_ENROLMENT, _DEPOSIT_RECIEVED, _BALANCE_DUE, _TOTAL_GUEST, " +
    "_TOTAL_NIGHTS,  FULL_NAME   from GuestBill g INNER " +
    "JOIN Emplyee e  ON (g.ID_EMP=e.ID_EMP or g.ID_EMP is null) " +
    "              where g.ID_GUEST = :ID_GUEST_P ORDER BY DATE_", parBill, false, Load.ALL));
    qresBill.setDatabase(m_dbMain);
    clmPR_ID_GUEST_P.setCaption("ID_GUEST_P");
    clmPR_ID_GUEST_P.setColumnName("ID_GUEST_P");
    clmPR_ID_GUEST_P.setDataType(borland.jbcl.util.Variant.INT);
    clmPR_ID_GUEST_P.setParameterType(ParameterType.IN);
    clmPR_ID_GUEST_P.setRequired(true);
    column5.setBackground(SystemColor.info);
    column5.setCaption("Bill No.");
    column5.setColumnName("BILL_NO");
    column5.setDataType(borland.jbcl.util.Variant.INT);
    column5.setForeground(new Color(64, 128, 128));
    column5.setEditable(false);
    column5.setFont(new Font("Helvetica", 1, 12));
    column5.setReadOnly(true);
    column5.setRowId(true);
    column5.setResolvable(false);
    column5.setTableName("GuestBill");
    column5.setWidth(7);
    column5.setVisible(borland.jbcl.util.TriState.YES);
    column6.setColumnName("ID_EMP");
    column6.setDataType(borland.jbcl.util.Variant.INT);
    column6.setResolvable(false);
    column6.setVisible(borland.jbcl.util.TriState.NO);
    column7.setColumnName("ID_GUEST");
    column7.setDataType(borland.jbcl.util.Variant.INT);
    column7.setVisible(borland.jbcl.util.TriState.NO);
    column8.setColumnName("FOLIO");
    column8.setDataType(borland.jbcl.util.Variant.STRING);
    column8.setVisible(borland.jbcl.util.TriState.YES);
    column9.setColumnName("DATE_");
    column9.setDataType(borland.jbcl.util.Variant.TIMESTAMP);
    column9.setVisible(borland.jbcl.util.TriState.NO);
    column10.setColumnName("HEARD_OF_GI");
    column10.setDataType(borland.jbcl.util.Variant.STRING);
    column10.setVisible(borland.jbcl.util.TriState.NO);
    column11.setColumnName("DETAILS");
    column11.setDataType(borland.jbcl.util.Variant.STRING);
    column11.setVisible(borland.jbcl.util.TriState.NO);
    column12.setColumnName("COMMENTS");
    column12.setDataType(borland.jbcl.util.Variant.STRING);
    column12.setVisible(borland.jbcl.util.TriState.NO);
    column13.setColumnName("ID_EMP");
    column13.setDataType(borland.jbcl.util.Variant.INT);
    column13.setTableName("GuestBill");
    column14.setColumnName("ID_EMP");
    column14.setDataType(borland.jbcl.util.Variant.INT);
    column14.setSearchable(false);
    column14.setResolvable(false);
    column14.setTableName("GuestBill");
    column14.setVisible(borland.jbcl.util.TriState.NO);
    column15.setColumnName("ID_GUEST");
    column15.setDataType(borland.jbcl.util.Variant.INT);
    column15.setVisible(borland.jbcl.util.TriState.NO);
    column16.setCaption("ID_GUEST");
    column16.setColumnName("ID_GUEST");
    column16.setDataType(borland.jbcl.util.Variant.INT);
    column16.setRequired(true);
    column16.setTableName("GuestBill");
    column16.setVisible(borland.jbcl.util.TriState.NO);
    column17.setBackground(new Color(240, 251, 255));
    column17.setCaption("Folio");
    column17.setColumnName("FOLIO");
    column17.setDataType(borland.jbcl.util.Variant.STRING);
    column17.setForeground(new Color(64, 128, 128));
    column17.setFont(new Font("Helvetica", 1, 12));
    column17.setRequired(true);
    column17.setTableName("GuestBill");
    column17.setVisible(borland.jbcl.util.TriState.YES);
    column19.setBackground(new Color(240, 251, 255));
    column19.setCaption("Heard of GI");
    column19.setColumnName("HEARD_OF_GI");
    column19.setDataType(borland.jbcl.util.Variant.STRING);
    column19.setForeground(new Color(64, 128, 128));
    column19.setFont(new Font("Helvetica", 1, 12));
    column19.setRequired(true);
    column19.setTableName("GuestBill");
    column19.setWidth(35);
    column20.setBackground(new Color(240, 251, 255));
    column20.setCaption("Details");
    column20.setColumnName("DETAILS");
    column20.setDataType(borland.jbcl.util.Variant.STRING);
    column20.setForeground(new Color(64, 128, 128));
    column20.setFont(new Font("Helvetica", 1, 12));
    column20.setTableName("GuestBill");
    column20.setWidth(64);
    column21.setBackground(new Color(240, 251, 255));
    column21.setCaption("COMMENTS");
    column21.setColumnName("COMMENTS");
    column21.setDataType(borland.jbcl.util.Variant.STRING);
    column21.setForeground(new Color(64, 128, 128));
    column21.setSearchable(false);
    column21.setTableName("GuestBill");
    column21.setWidth(256);
    column22.setBackground(SystemColor.info);
    column22.setCaption("_TOTAL_ADDITIONAL");
    column22.setCurrency(true);
    column22.setDisplayMask("$#,##0.00;($#,##0.00)");
    column22.setForeground(new Color(64, 128, 128));
    column22.setFont(new Font("Helvetica", 1, 12));
    column22.setEditable(false);
    column22.setColumnName("_TOTAL_ADDITIONAL");
    column22.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column22.setReadOnly(true);
    column22.setResolvable(false);
    column22.setSearchable(false);
    column22.setTableName("GuestBill");
    column22.setVisible(borland.jbcl.util.TriState.NO);
    column23.setBackground(SystemColor.info);
    column23.setCaption("_TOTAL_PAYMENTS");
    column23.setCurrency(true);
    column23.setDisplayMask("$#,##0.00;($#,##0.00)");
    column23.setColumnName("_TOTAL_PAYMENTS");
    column23.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column23.setFont(new Font("Helvetica", 1, 12));
    column23.setForeground(new Color(64, 128, 128));
    column23.setReadOnly(true);
    column23.setEditable(false);
    column23.setResolvable(false);
    column23.setSearchable(false);
    column23.setTableName("GuestBill");
    column23.setVisible(borland.jbcl.util.TriState.NO);
    column24.setBackground(SystemColor.info);
    column24.setCaption("_TOTAL_ROOMSPAY");
    column24.setCurrency(true);
    column24.setDisplayMask("$#,##0.00;($#,##0.00)");
    column24.setForeground(new Color(64, 128, 128));
    column24.setReadOnly(true);
    column24.setFont(new Font("Helvetica", 1, 12));
    column24.setEditable(false);
    column24.setResolvable(false);
    column24.setVisible(borland.jbcl.util.TriState.NO);
    column24.setSearchable(false);
    column24.setTableName("GuestBill");
    column25.setBackground(SystemColor.info);
    column25.setCaption("_SUBTOTAL");
    column25.setCurrency(true);
    column25.setDisplayMask("$#,##0.00;($#,##0.00)");
    column25.setForeground(new Color(64, 128, 128));
    column25.setReadOnly(true);
    column25.setFont(new Font("Helvetica", 1, 12));
    column25.setEditable(false);
    column25.setResolvable(false);
    column25.setSearchable(false);
    column25.setVisible(borland.jbcl.util.TriState.NO);
    column26.setBackground(SystemColor.info);
    column26.setCaption("_TAX_AND_SERVICE");
    column26.setCurrency(true);
    column26.setDisplayMask("$#,##0.00;($#,##0.00)");
    column26.setFont(new Font("Helvetica", 1, 12));
    column26.setForeground(new Color(64, 128, 128));
    column26.setReadOnly(true);
    column26.setColumnName("_TAX_AND_SERVICE");
    column26.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column26.setEditable(false);
    column26.setResolvable(false);
    column26.setSearchable(false);
    column26.setTableName("GuestBill");
    column26.setVisible(borland.jbcl.util.TriState.NO);
    column27.setBackground(SystemColor.info);
    column27.setCaption("_TOTAL");
    column27.setCurrency(true);
    column27.setDisplayMask("$#,##0.00;($#,##0.00)");
    column27.setFont(new Font("Helvetica", 1, 12));
    column27.setForeground(new Color(64, 128, 128));
    column27.setReadOnly(true);
    column27.setEditable(false);
    column27.setResolvable(false);
    column27.setSearchable(false);
    column27.setTableName("GuestBill");
    column27.setVisible(borland.jbcl.util.TriState.NO);
    column28.setBackground(SystemColor.info);
    column28.setCaption("_DEPOSIT_RECIEVED");
    column28.setCurrency(true);
    column28.setColumnName("_DEPOSIT_RECIEVED");
    column28.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column28.setDisplayMask("$#,##0.00;($#,##0.00)");
    column28.setForeground(new Color(64, 128, 128));
    column28.setFont(new Font("Helvetica", 1, 12));
    column28.setReadOnly(true);
    column28.setEditable(false);
    column28.setResolvable(false);
    column28.setSearchable(false);
    column28.setTableName("GuestBill");
    column28.setVisible(borland.jbcl.util.TriState.NO);
    column29.setBackground(SystemColor.info);
    column29.setCaption("_BALANCE_DUE");
    column29.setCurrency(true);
    column29.setColumnName("_BALANCE_DUE");
    column29.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column29.setDisplayMask("$#,##0.00;($#,##0.00)");
    column29.setFont(new Font("Helvetica", 1, 12));
    column29.setForeground(new Color(64, 128, 128));
    column29.setEditable(false);
    column29.setReadOnly(true);
    column29.setSearchable(false);
    column29.setTableName("GuestBill");
    column29.setResolvable(false);
    column29.setVisible(borland.jbcl.util.TriState.NO);
    column30.setBackground(SystemColor.info);
    column30.setCaption("_TOTAL_GUEST");
    column30.setColumnName("_TOTAL_GUEST");
    column30.setDataType(borland.jbcl.util.Variant.INT);
    column30.setFont(new Font("Helvetica", 1, 12));
    column30.setForeground(new Color(64, 128, 128));
    column30.setEditable(false);
    column30.setReadOnly(true);
    column30.setResolvable(false);
    column30.setSearchable(false);
    column30.setTableName("GuestBill");
    column30.setVisible(borland.jbcl.util.TriState.NO);
    column31.setBackground(SystemColor.info);
    column31.setCaption("_TOTAL_NIGHTS");
    column31.setColumnName("_TOTAL_NIGHTS");
    column31.setDataType(borland.jbcl.util.Variant.INT);
    column31.setForeground(new Color(64, 128, 128));
    column31.setReadOnly(true);
    column31.setFont(new Font("Helvetica", 1, 12));
    column31.setEditable(false);
    column31.setResolvable(false);
    column31.setSearchable(false);
    column31.setTableName("GuestBill");
    column31.setVisible(borland.jbcl.util.TriState.NO);
    column33.setBackground(SystemColor.info);
    column33.setCaption("FULL_NAME");
    column33.setColumnName("FULL_NAME");
    column33.setDataType(borland.jbcl.util.Variant.STRING);
    column33.setForeground(new Color(64, 128, 128));
    column33.setReadOnly(true);
    column33.setFont(new Font("Helvetica", 1, 12));
    column33.setEditable(false);
    column33.setResolvable(false);
    column33.setSearchable(false);
    column33.setTableName("Emplyee");
    column33.setVisible(borland.jbcl.util.TriState.NO);
    column33.setWidth(64);
    column18.setBackground(new Color(240, 251, 251));
    column18.setCaption("Date");
    column18.setColumnName("DATE_");
    column18.setDisplayMask("M/d/yyyy");
    column18.setDataType(borland.jbcl.util.Variant.TIMESTAMP);
    column18.setForeground(new Color(64, 128, 128));
    column18.setRequired(true);
    column18.setSearchable(false);
    column18.setTableName("GuestBill");
    column18.setWidth(12);
    column18.setVisible(borland.jbcl.util.TriState.YES);
    column32.setCaption("_PAY_ENROLMENT");
    column32.setColumnName("_PAY_ENROLMENT");
    column32.setDataType(borland.jbcl.util.Variant.BYTE);
    column32.setReadOnly(true);
    column32.setTableName("GuestBill");
    column32.setResolvable(false);
    column32.setVisible(borland.jbcl.util.TriState.NO);
    m_prDelGuest.setEditable(false);
    column34.setCaption("id_guest");
    column34.setColumnName("id_guest");
    column34.setDataType(borland.jbcl.util.Variant.INT);
    column34.setParameterType(ParameterType.IN);
    column34.setRequired(true);
    column35.setColumnName("bill_no");
    column35.setDataType(borland.jbcl.util.Variant.INT);
    column35.setParameterType(ParameterType.IN);
    column35.setRequired(true);
    column36.setColumnName("d1");
    column36.setDataType(borland.jbcl.util.Variant.TIMESTAMP);
    column36.setParameterType(ParameterType.IN);
    column36.setRequired(true);
    column37.setColumnName("d2");
    column37.setDataType(borland.jbcl.util.Variant.TIMESTAMP);
    column37.setParameterType(ParameterType.IN);
    column37.setRequired(true);
    column38.setColumnName("bill_no");
    column38.setDataType(borland.jbcl.util.Variant.INT);
    column38.setParameterType(ParameterType.IN);
    column38.setRequired(true);
    column39.setColumnName("flag");
    column39.setDataType(borland.jbcl.util.Variant.INT);
    column39.setParameterType(ParameterType.IN);
    column39.setRequired(true);
    qresRoomsUsed.setDatabase(m_dbMain);
    qresAddCh.setDatabase(m_dbMain);
    qresPayments.setDatabase(m_dbMain);
    column40.setCaption("BILL_NO");
    column40.setColumnName("BILL_NO");
    column40.setDataType(borland.jbcl.util.Variant.INT);
    column40.setParameterType(ParameterType.IN);
    column40.setRequired(true);
    column41.setCaption("BILL_NO");
    column41.setColumnName("BILL_NO");
    column41.setDataType(borland.jbcl.util.Variant.INT);
    column41.setParameterType(ParameterType.IN);
    column41.setRequired(true);
    column42.setCaption("BILL_NO");
    column42.setColumnName("BILL_NO");
    column42.setDataType(borland.jbcl.util.Variant.INT);
    column42.setParameterType(ParameterType.IN);
    column42.setRequired(true);
    column43.setCaption("ID_DB");
    column43.setColumnName("ID_DB");
    column43.setDataType(borland.jbcl.util.Variant.INT);
    column43.setRowId(true);
    column43.setResolvable(false);
    column43.setVisible(borland.jbcl.util.TriState.NO);
    column44.setBackground(SystemColor.info);
    column44.setCaption("Bill No.");
    column44.setColumnName("BILL_NO");
    column44.setDataType(borland.jbcl.util.Variant.INT);
    column44.setForeground(new Color(64, 128, 128));
    column44.setRequired(true);
    column44.setEditable(false);
    column44.setVisible(borland.jbcl.util.TriState.NO);
    column45.setBackground(new Color(240, 251, 255));
    column45.setCaption("No. of guests");
    column45.setColumnName("NO_OF_GUESTS");
    column45.setDataType(borland.jbcl.util.Variant.INT);
    column45.setForeground(new Color(64, 128, 128));
    column45.setRequired(true);
    column45.setVisible(borland.jbcl.util.TriState.YES);
    column46.setBackground(new Color(240, 251, 255));
    column46.setCaption("Date in");
    column46.setColumnName("DATE_IN");
    column46.setDisplayMask("M/d/yyyy");
    column46.setDataType(borland.jbcl.util.Variant.TIMESTAMP);
    column46.setForeground(new Color(64, 128, 128));
    column46.setRequired(true);
    column46.setSearchable(false);
    column46.setWidth(12);
    column46.setVisible(borland.jbcl.util.TriState.YES);
    column47.setBackground(new Color(240, 251, 255));
    column47.setCaption("Date out");
    column47.setColumnName("DATE_OUT");
    column47.setDisplayMask("M/d/yyyy");
    column47.setDataType(borland.jbcl.util.Variant.TIMESTAMP);
    column47.setForeground(new Color(64, 128, 128));
    column47.setRequired(true);
    column47.setSearchable(false);
    column47.setWidth(12);
    column47.setVisible(borland.jbcl.util.TriState.YES);
    column48.setBackground(new Color(240, 251, 255));
    column48.setCaption("Room");
    column48.setColumnName("ID_ROOM");
    column48.setDataType(borland.jbcl.util.Variant.INT);
    column48.setForeground(new Color(64, 128, 128));
    column48.setRequired(true);
    column48.setVisible(borland.jbcl.util.TriState.YES);
    column49.setBackground(SystemColor.info);
    column49.setCaption("No. of nights");
    column49.setColumnName("_NIGHTS");
    column49.setDataType(borland.jbcl.util.Variant.INT);
    column49.setForeground(new Color(64, 128, 128));
    column49.setReadOnly(true);
    column49.setFont(new Font("Helvetica", 1, 12));
    column49.setEditable(false);
    column49.setResolvable(false);
    column49.setWidth(12);
    column49.setVisible(borland.jbcl.util.TriState.YES);
    column50.setBackground(SystemColor.info);
    column50.setCaption("Rate");
    column50.setCurrency(true);
    column50.setDisplayMask("$#,##0.00;($#,##0.00)");
    column50.setColumnName("_RATE");
    column50.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column50.setForeground(new Color(64, 128, 128));
    column50.setReadOnly(true);
    column50.setFont(new Font("Helvetica", 1, 12));
    column50.setEditable(false);
    column50.setResolvable(false);
    column50.setWidth(7);
    column50.setSearchable(false);
    column50.setVisible(borland.jbcl.util.TriState.YES);
    column51.setBackground(SystemColor.info);
    column51.setCaption("Charge");
    column51.setCurrency(true);
    column51.setDisplayMask("$#,##0.00;($#,##0.00)");
    column51.setColumnName("_CHARGE");
    column51.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column51.setFont(new Font("Helvetica", 1, 12));
    column51.setForeground(new Color(64, 128, 128));
    column51.setReadOnly(true);
    column51.setEditable(false);
    column51.setResolvable(false);
    column51.setWidth(10);
    column51.setSearchable(false);
    column51.setVisible(borland.jbcl.util.TriState.YES);
    column52.setColumnName("__NAME");
    column52.setDataType(borland.jbcl.util.Variant.STRING);
    column52.setReadOnly(true);
    column52.setEditable(false);
    column52.setResolvable(false);
    column52.setWidth(40);
    column53.setColumnName("ID_AC");
    column53.setDataType(borland.jbcl.util.Variant.INT);
    column53.setReadOnly(true);
    column53.setEditable(false);
    column53.setRowId(true);
    column53.setResolvable(false);
    column53.setVisible(borland.jbcl.util.TriState.NO);
    column54.setColumnName("BILL_NO");
    column54.setDataType(borland.jbcl.util.Variant.INT);
    column54.setRequired(true);
    column54.setEditable(false);
    column54.setVisible(borland.jbcl.util.TriState.NO);
    column55.setBackground(new Color(240, 251, 251));
    column55.setCaption("Bill category");
    column55.setColumnName("ID_BILL");
    column55.setDataType(borland.jbcl.util.Variant.INT);
    column55.setForeground(new Color(64, 128, 128));
    column55.setFont(new Font("Helvetica", 1, 12));
    column55.setRequired(true);
    column55.setVisible(borland.jbcl.util.TriState.YES);
    column56.setBackground(new Color(192, 220, 192));
    column56.setCaption("Amount ($)");
    column56.setCurrency(true);
    column56.setDisplayMask("#,##0.00;(#,##0.00)");
    column56.setForeground(new Color(64, 128, 128));
    column56.setRequired(true);
    column56.setWidth(10);
    column56.setVisible(borland.jbcl.util.TriState.YES);
    column57.setBackground(new Color(240, 202, 166));
    column57.setCaption("Date");
    column57.setColumnName("MKDATE");
    column57.setDisplayMask("M/d/yyyy");
    column57.setDataType(borland.jbcl.util.Variant.TIMESTAMP);
    column57.setFont(new Font("Helvetica", 1, 12));
    column57.setForeground(new Color(64, 128, 128));
    column57.setSearchable(false);
    column57.setWidth(12);
    column57.setVisible(borland.jbcl.util.TriState.YES);
    column58.setColumnName("ID_PAY");
    column58.setDataType(borland.jbcl.util.Variant.INT);
    column58.setReadOnly(true);
    column58.setEditable(false);
    column58.setRowId(true);
    column58.setResolvable(false);
    column58.setVisible(borland.jbcl.util.TriState.NO);
    column59.setColumnName("BILL_NO");
    column59.setDataType(borland.jbcl.util.Variant.INT);
    column59.setRequired(true);
    column59.setEditable(false);
    column59.setVisible(borland.jbcl.util.TriState.NO);
    column60.setBackground(new Color(192, 220, 192));
    column60.setCaption("Amount ($)");
    column60.setCurrency(true);
    column60.setDisplayMask("#,##0.00;(#,##0.00)");
    column60.setColumnName("AMOUNT");
    column60.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column60.setFont(new Font("Helvetica", 1, 12));
    column60.setForeground(new Color(64, 128, 128));
    column60.setRequired(true);
    column60.setWidth(10);
    column60.setVisible(borland.jbcl.util.TriState.YES);
    column61.setBackground(new Color(240, 251, 255));
    column61.setCaption("Description");
    column61.setColumnName("DESCRIPTION");
    column61.setDataType(borland.jbcl.util.Variant.STRING);
    column61.setForeground(new Color(64, 128, 128));
    column61.setRequired(true);
    column61.setVisible(borland.jbcl.util.TriState.YES);
    column61.setWidth(64);
    column63.setColumnName("__NAME");
    column63.setDataType(borland.jbcl.util.Variant.STRING);
    column63.setEditable(false);
    column63.setReadOnly(true);
    column63.setResolvable(false);
    column63.setWidth(30);
    column63.setVisible(borland.jbcl.util.TriState.NO);
    column61.setFont(new Font("Helvetica", 1, 12));
    column56.setColumnName("AMOUNT");
    column56.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column56.setFont(new Font("Helvetica", 1, 12));
    column52.setSearchable(false);
    column52.setVisible(borland.jbcl.util.TriState.NO);
    column48.setFont(new Font("Helvetica", 1, 12));
    column47.setFont(new Font("Helvetica", 1, 12));
    column46.setFont(new Font("Helvetica", 1, 12));
    column45.setFont(new Font("Helvetica", 1, 12));
    column44.setFont(new Font("Helvetica", 1, 12));
    m_qRoomsUsed.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qRoomsUsed.setResolver(qresRoomsUsed);
    m_qRoomsUsed.setTableName("GuestBillData");
    m_qRoomsUsed.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select * from GuestBillData where BILL_NO = :bill_no ORDER BY DATE_IN", prRoomsUsed, false, Load.ALL));
    m_qAddCh.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qAddCh.setResolver(qresAddCh);
    m_qAddCh.setTableName("AdditionalCharge");
    m_qAddCh.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select * from AdditionalCharge where BILL_NO = :bill_no ORDER BY MKDATE", prAddCh, false, Load.ALL));
    m_qPayments.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qPayments.setResolver(qresPayments);
    m_qPayments.setTableName("Payments");
    m_qPayments.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select * from Payments where BILL_NO=:bill_no", prPayments, false, Load.ALL));
    m_qLook_Room.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qLook_Room.setResolvable(false);
    m_qLook_Room.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbLook, "select * from Room", null, false, Load.ALL));
    m_qLook_PayCat.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qLook_PayCat.setResolvable(false);
    m_qLook_PayCat.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbLook, "select * from BillCategory", null, false, Load.ALL));
    column18.setFont(new Font("Helvetica", 1, 12));
    column27.setColumnName("_TOTAL");
    column27.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column25.setTableName("GuestBill");
    column25.setColumnName("_SUBTOTAL");
    column25.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column24.setColumnName("_TOTAL_ROOMSPAY");
    column24.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);
    column21.setVisible(borland.jbcl.util.TriState.NO);
    column21.setFont(new Font("Helvetica", 1, 12));
    column20.setVisible(borland.jbcl.util.TriState.NO);
    column19.setVisible(borland.jbcl.util.TriState.NO);
    column8.setTableName("GuestBill");

    m_qGuest.setMetaDataUpdate(MetaDataUpdate.NONE);
    m_qGuest.setResolver(qresGuest);
    m_qGuest.setTableName("Guest");                                      //
    m_qGuest.setStoreName("");                                          //"select * from Guest"
    m_qGuest.setQuery(new borland.sql.dataset.QueryDescriptor(m_dbMain, "select * from Guest ORDER BY FNAME, LNAME", null, false, Load.ALL));
    qresGuest.setDatabase(m_dbMain);
    clmID_GUEST.setColumnName("ID_GUEST");
    clmID_GUEST.setDataType(borland.jbcl.util.Variant.INT);
    clmID_GUEST.setEditable(false);
    clmID_GUEST.setRowId(true);
    clmID_GUEST.setTableName("GUEST");
    clmID_GUEST.setResolvable(false);
    clmID_GUEST.setVisible(borland.jbcl.util.TriState.NO);
    clmID_CAT.setBackground(new Color(240, 251, 255));
    clmID_CAT.setCaption("Category");
    clmID_CAT.setColumnName("ID_CAT");
    clmID_CAT.setDataType(borland.jbcl.util.Variant.INT);
    clmID_CAT.setFont(new Font("Helvetica", 1, 12));
    clmID_CAT.setForeground(new Color(64, 128, 128));
    clmID_CAT.setRequired(true);
    clmID_CAT.setTableName("GUEST");
    clmID_CAT.setVisible(borland.jbcl.util.TriState.NO);
    clmFNAME.setBackground(new Color(240, 251, 255));
    clmFNAME.setCaption("First Name");
    clmFNAME.setColumnName("FNAME");
    clmFNAME.setDataType(borland.jbcl.util.Variant.STRING);
    clmFNAME.setFont(new Font("Helvetica", 1, 12));
    clmFNAME.setForeground(new Color(64, 128, 128));
    clmFNAME.setRequired(true);
    clmFNAME.setTableName("GUEST");
    clmFNAME.setWidth(30);
    clmLNAME.setBackground(new Color(240, 251, 255));
    clmLNAME.setCaption("Last Name");
    clmLNAME.setColumnName("LNAME");
    clmLNAME.setDataType(borland.jbcl.util.Variant.STRING);
    clmLNAME.setFont(new Font("Helvetica", 1, 12));
    clmLNAME.setForeground(new Color(64, 128, 128));
    clmLNAME.setRequired(true);
    clmLNAME.setTableName("GUEST");
    clmLNAME.setWidth(30);
    clmCITY.setBackground(new Color(240, 251, 255));
    clmCITY.setCaption("City");
    clmCITY.setColumnName("CITY");
    clmCITY.setDataType(borland.jbcl.util.Variant.STRING);
    clmCITY.setFont(new Font("Helvetica", 1, 12));
    clmCITY.setForeground(new Color(64, 128, 128));
    clmCITY.setRequired(true);
    clmCITY.setTableName("GUEST");
    clmCITY.setVisible(borland.jbcl.util.TriState.NO);
    clmSTATE.setBackground(new Color(240, 251, 255));
    clmSTATE.setCaption("State");
    clmSTATE.setColumnName("STATE");
    clmSTATE.setDataType(borland.jbcl.util.Variant.STRING);
    clmSTATE.setFont(new Font("Helvetica", 1, 12));
    clmSTATE.setForeground(new Color(64, 128, 128));
    clmSTATE.setRequired(true);
    clmSTATE.setTableName("GUEST");
    clmSTATE.setVisible(borland.jbcl.util.TriState.NO);
    clmADDRESS.setBackground(new Color(240, 251, 255));
    clmADDRESS.setCaption("Address");
    clmADDRESS.setColumnName("ADDRESS");
    clmADDRESS.setDataType(borland.jbcl.util.Variant.STRING);
    clmADDRESS.setFont(new Font("Helvetica", 1, 12));
    clmADDRESS.setForeground(new Color(64, 128, 128));
    clmADDRESS.setRequired(true);
    clmADDRESS.setTableName("GUEST");
    clmADDRESS.setVisible(borland.jbcl.util.TriState.NO);
    clmPOST.setBackground(new Color(240, 251, 255));
    clmPOST.setCaption("Postal code");
    clmPOST.setColumnName("POST");
    clmPOST.setDataType(borland.jbcl.util.Variant.INT);
    clmPOST.setFont(new Font("Helvetica", 1, 12));
    clmPOST.setForeground(new Color(64, 128, 128));
    clmPOST.setRequired(true);
    clmPOST.setTableName("GUEST");
    clmPOST.setVisible(borland.jbcl.util.TriState.NO);
    clmDEPOSIT.setBackground(new Color(192, 220, 192));
    clmDEPOSIT.setCaption("Deposit");
    clmDEPOSIT.setCurrency(true);
    clmDEPOSIT.setColumnName("DEPOSIT");
    clmDEPOSIT.setDisplayMask("#,##0.00;(#,##0.00)");
    clmDEPOSIT.setDataType(borland.jbcl.util.Variant.BIGDECIMAL);

    clmDEPOSIT.setFont(new Font("Helvetica", 1, 12));
    clmDEPOSIT.setForeground(new Color(64, 128, 128));
    clmDEPOSIT.setRequired(true);
    clmDEPOSIT.setTableName("GUEST");
    clmDEPOSIT.setVisible(borland.jbcl.util.TriState.NO);
    clm__NAMECAT.setColumnName("__NAMECAT");
    clm__NAMECAT.setDataType(borland.jbcl.util.Variant.STRING);
    clm__NAMECAT.setEditable(false);
    clm__NAMECAT.setTableName("GUEST");
    clm__NAMECAT.setResolvable(false);
    clm__NAMECAT.setVisible(borland.jbcl.util.TriState.NO);
    m_qRoom.setColumns(new Column[] {clmROOM_ID, clmROOM_Name, clmROOM_Rate});
    m_qGuest.setColumns(new Column[] {clmID_GUEST, clmID_CAT, clmFNAME, clmLNAME, clmCITY, clmSTATE, clmADDRESS, clmPOST, clmDEPOSIT, clm__NAMECAT});
    m_qBillCat.setColumns(new Column[] {column3, column4});
    qresGuestCat.setDatabase(m_dbMain);
    qresBillCat.setDatabase(m_dbMain);
    m_qGuestCat.setColumns(new Column[] {column1, column2});
    parBill.setColumns(new Column[] {clmPR_ID_GUEST_P});
    m_qBill.setColumns(new Column[] {column5, column14, column16, column17, column19, column20, column21, column22, column23, column24, column25, column26, column27, column28, column29, column30, column31, column33, column18, column32});
    prDelGuest.setColumns(new Column[] {column34});
    prDelBill.setColumns(new Column[] {column35});
    prDelBillTime.setColumns(new Column[] {column36, column37});
    prPayEnroll.setColumns(new Column[] {column38, column39});
    prPayments.setColumns(new Column[] {column42});
    prAddCh.setColumns(new Column[] {column41});
    prRoomsUsed.setColumns(new Column[] {column40});
    m_qRoomsUsed.setColumns(new Column[] {column43, column44, column45, column46, column47, column48, column49, column50, column51, column52});
    m_qPayments.setColumns(new Column[] {column58, column59, column60, column61});
    m_qAddCh.setColumns(new Column[] {column53, column54, column55, column56, column57, column63});
  }

  ProcedureDataSet m_prDelGuest = new ProcedureDataSet();
  ParameterRow prDelGuest = new ParameterRow();
  ParameterRow prDelBill = new ParameterRow();
  ParameterRow prDelBillTime = new ParameterRow();
  ParameterRow prPayEnroll = new ParameterRow();
  Column column34 = new Column();
  Column column35 = new Column();
  Column column36 = new Column();
  Column column37 = new Column();
  Column column38 = new Column();
  Column column39 = new Column();

  private TExtProcs[] m_tpProcs = new TExtProcs[]{ new TExtProcs(), new TExtProcs() };
  public QueryDataSet m_qRoomsUsed = new QueryDataSet();
  public QueryDataSet m_qAddCh = new QueryDataSet();
  public QueryDataSet m_qPayments = new QueryDataSet();
  public QueryDataSet m_qLook_Room = new QueryDataSet();
  public QueryDataSet m_qLook_PayCat = new QueryDataSet();
  QueryResolver qresRoomsUsed = new QueryResolver();
  QueryResolver qresAddCh = new QueryResolver();
  QueryResolver qresPayments = new QueryResolver();
  ParameterRow prRoomsUsed = new ParameterRow();
  ParameterRow prAddCh = new ParameterRow();
  ParameterRow prPayments = new ParameterRow();
  Column column40 = new Column();
  Column column41 = new Column();
  Column column42 = new Column();
  Column column43 = new Column();
  Column column44 = new Column();
  Column column45 = new Column();
  Column column46 = new Column();
  Column column47 = new Column();
  Column column48 = new Column();
  Column column49 = new Column();
  Column column50 = new Column();
  Column column51 = new Column();
  Column column52 = new Column();
  Column column53 = new Column();
  Column column54 = new Column();
  Column column55 = new Column();
  Column column56 = new Column();
  Column column57 = new Column();
  Column column58 = new Column();
  Column column59 = new Column();
  Column column60 = new Column();
  Column column61 = new Column();
  Column column63 = new Column();

  public borland.sql.dataset.QueryDataSet getM_qRoomsUsed() {
    return m_qRoomsUsed;
  }

  public borland.sql.dataset.QueryDataSet getM_qAddCh() {
    return m_qAddCh;
  }

  public borland.sql.dataset.QueryDataSet getM_qPayments() {
    return m_qPayments;
  }

  public borland.sql.dataset.QueryDataSet getM_qLook_Room() {
    return m_qLook_Room;
  }

  public borland.sql.dataset.QueryDataSet getM_qLook_PayCat() {
    return m_qLook_PayCat;
  }

  public borland.sql.dataset.QueryResolver getQresRoomsUsed() {
    return qresRoomsUsed;
  }

  public borland.sql.dataset.QueryResolver getQresAddCh() {
    return qresAddCh;
  }

  public borland.sql.dataset.QueryResolver getQresPayments() {
    return qresPayments;
  }

  public borland.jbcl.dataset.ParameterRow getPrRoomsUsed() {
    return prRoomsUsed;
  }

  public borland.jbcl.dataset.ParameterRow getPrAddCh() {
    return prAddCh;
  }

  public borland.jbcl.dataset.ParameterRow getPrPayments() {
    return prPayments;
  }

}
