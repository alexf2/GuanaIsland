// Skeleton class generated by rmic, do not edit.
// Contents subject to change without notice.

package G_APPL;


public final class RefController_Skel
    extends java.lang.Object
    implements java.rmi.server.Skeleton
{
    private static java.rmi.server.Operation[] operations = {
        new java.rmi.server.Operation("void ClearRef()"), 
        new java.rmi.server.Operation("void IAcc_PayEnrol(int, boolean)"), 
        new java.rmi.server.Operation("void IMD_CloseCnct(java.lang.String)"), 
        new java.rmi.server.Operation("borland.jbcl.dataset.Column IMD_GetColumns(java.lang.String)[]"), 
        new java.rmi.server.Operation("borland.jbcl.dataset.ParameterRow IMD_GetParameterRow(java.lang.String)"), 
        new java.rmi.server.Operation("void IMD_OpenCnct(java.lang.String, java.lang.String, java.lang.String)"), 
        new java.rmi.server.Operation("G_APPL.TDataRet IMD_ProvideData(java.lang.String, int, int, boolean, G_APPL.TParameterRow_ValTransfer)"), 
        new java.rmi.server.Operation("borland.jbcl.dataset.DataSetData IMD_ProvideDataAll(java.lang.String)"), 
        new java.rmi.server.Operation("borland.jbcl.dataset.DataSetData IMD_ResolveChanges(java.lang.String, borland.jbcl.dataset.DataSetData, boolean)[]"), 
        new java.rmi.server.Operation("void IMD_SetQueryText(java.lang.String, java.lang.String, java.lang.String)")
    };
    
    private static final long interfaceHash = 5759054305747638944L;
    
    public java.rmi.server.Operation[] getOperations() { 
        return operations;
    }
    
    public void dispatch(java.rmi.Remote obj, java.rmi.server.RemoteCall call, int opnum, long hash) throws java.rmi.RemoteException, Exception {
        // Exceptions pass through, to be caught, identified and marshalled
        
        if (hash != interfaceHash)
            throw new java.rmi.server.SkeletonMismatchException("Hash mismatch");
        G_APPL.RefController server = (G_APPL.RefController)obj;
        switch (opnum) {
        case 0: { // ClearRef
            call.releaseInputStream();
            server.ClearRef();
            try {
                call.getResultStream(true);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 1: { // IAcc_PayEnrol
            int $_int_1;
            boolean $_boolean_2;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_int_1 = in.readInt();
                $_boolean_2 = in.readBoolean();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            server.IAcc_PayEnrol($_int_1, $_boolean_2);
            try {
                call.getResultStream(true);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 2: { // IMD_CloseCnct
            java.lang.String $_String_1;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            server.IMD_CloseCnct($_String_1);
            try {
                call.getResultStream(true);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 3: { // IMD_GetColumns
            java.lang.String $_String_1;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            borland.jbcl.dataset.Column[] $result = server.IMD_GetColumns($_String_1);
            try {
                java.io.ObjectOutput out = call.getResultStream(true);
                out.writeObject($result);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 4: { // IMD_GetParameterRow
            java.lang.String $_String_1;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            borland.jbcl.dataset.ParameterRow $result = server.IMD_GetParameterRow($_String_1);
            try {
                java.io.ObjectOutput out = call.getResultStream(true);
                out.writeObject($result);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 5: { // IMD_OpenCnct
            java.lang.String $_String_1;
            java.lang.String $_String_2;
            java.lang.String $_String_3;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
                $_String_2 = (java.lang.String)in.readObject();
                $_String_3 = (java.lang.String)in.readObject();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            server.IMD_OpenCnct($_String_1, $_String_2, $_String_3);
            try {
                call.getResultStream(true);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 6: { // IMD_ProvideData
            java.lang.String $_String_1;
            int $_int_2;
            int $_int_3;
            boolean $_boolean_4;
            G_APPL.TParameterRow_ValTransfer $_TParameterRow_ValTransfer_5;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
                $_int_2 = in.readInt();
                $_int_3 = in.readInt();
                $_boolean_4 = in.readBoolean();
                $_TParameterRow_ValTransfer_5 = (G_APPL.TParameterRow_ValTransfer)in.readObject();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            G_APPL.TDataRet $result = server.IMD_ProvideData($_String_1, $_int_2, $_int_3, $_boolean_4, $_TParameterRow_ValTransfer_5);
            try {
                java.io.ObjectOutput out = call.getResultStream(true);
                out.writeObject($result);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 7: { // IMD_ProvideDataAll
            java.lang.String $_String_1;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            borland.jbcl.dataset.DataSetData $result = server.IMD_ProvideDataAll($_String_1);
            try {
                java.io.ObjectOutput out = call.getResultStream(true);
                out.writeObject($result);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 8: { // IMD_ResolveChanges
            java.lang.String $_String_1;
            borland.jbcl.dataset.DataSetData $_DataSetData_2;
            boolean $_boolean_3;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
                $_DataSetData_2 = (borland.jbcl.dataset.DataSetData)in.readObject();
                $_boolean_3 = in.readBoolean();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            borland.jbcl.dataset.DataSetData[] $result = server.IMD_ResolveChanges($_String_1, $_DataSetData_2, $_boolean_3);
            try {
                java.io.ObjectOutput out = call.getResultStream(true);
                out.writeObject($result);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        
        case 9: { // IMD_SetQueryText
            java.lang.String $_String_1;
            java.lang.String $_String_2;
            java.lang.String $_String_3;
            try {
                java.io.ObjectInput in = call.getInputStream();
                $_String_1 = (java.lang.String)in.readObject();
                $_String_2 = (java.lang.String)in.readObject();
                $_String_3 = (java.lang.String)in.readObject();
            } catch (java.io.IOException ex) {
                throw new java.rmi.UnmarshalException("Error unmarshaling arguments", ex);
            } finally {
                call.releaseInputStream();
            };
            server.IMD_SetQueryText($_String_1, $_String_2, $_String_3);
            try {
                call.getResultStream(true);
            } catch (java.io.IOException ex) {
                throw new java.rmi.MarshalException("Error marshaling return", ex);
            };
            break;
            }
        default:
            throw new java.rmi.RemoteException("Method number out of range");
        }
    }
}
